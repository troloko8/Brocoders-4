{"version":3,"sources":["store/tableTasks/actions.js","store/tableTasks/reducers.js","store/reducers.js","store/tableTasks/saga.js","components/TaskInfo/TaskInfo.jsx","components/MainContainer/ContainerTabPanel/TabPanel/TabPanel.jsx","components/MainContainer/ContainerTabPanel/TableTasks/TableTasks.jsx","components/MainContainer/ContainerTabPanel/Chart/Chart.jsx","components/MainContainer/ContainerTabPanel/ContainerTabPanel.jsx","components/MainContainer/Stopwatch/Stopwatch.jsx","components/MainContainer/MainContainer.jsx","Timer.js","serviceWorker.js","index.js"],"names":["randomArrTasks","number","nameTask","timeStart","Date","timeEnd","timeSpend","lastTasks","JSON","parse","localStorage","getItem","defaultState","combineReducers","tableTasks","state","action","type","filter","el","payload","playload","getNewRowTask","watchAddNewTask","put","takeLatest","blue900","blue","ButtonTable","styled","Button","color","backgroundColor","boxShadow","useStyles","makeStyles","container","marginLeft","marginRight","width","textAlign","title","alignText","items","listStyleType","fontSize","error","connect","rows","props","classes","numberTask","match","params","id","taskInfo","parseInt","undefined","className","moment","format","utc","to","style","textDecoration","margin","TabPanel","children","value","index","other","Typography","component","role","hidden","aria-labelledby","Box","blue50","StyledTableCell","withStyles","theme","head","palette","common","grey","body","TableCell","StyledTableRow","root","background","default","TableRow","mapDispatchToProps","deleteRowTasks","setItem","stringify","deleteTask","e","a","target","closest","getAttribute","mapTableTasks","map","row","key","scope","align","tabIndex","onClick","Table","TableHead","TableBody","ButtonGenerate","generateNewTasks","arr","i","push","h","minutes","maxMinutes","x","length","hourStart","hourEnd","hourStartMinutes","hourEndMinutes","duration","diff","asMinutes","createChartMinutesOnHour","height","data","top","right","bottom","left","dataKey","stroke","barSize","fill","cyan500","cyan","a11yProps","tabs","tab","minWidth","ContainerTabPanel","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","label","pink600","pink","taskTimer","borderRadius","display","alignItems","timer","buttonStopOrStart","marginBottom","taskContainer","flexDirection","justifyContent","taskNameInput","textAlignLast","modal","padding","transform","modalTitle","modalText","modalButton","setRowTasks","task","strogeSaveTimeRinning","strogeTaskName","runningTime","setRunningTime","now","setTimer","modalStatus","setModalStatus","taskName","setTaskName","setTimeStart","setNumberTask","buttonText","setButtonText","startStopwatche","startTime","setInterval","window","onload","TextField","placeholder","inputProps","variant","currentTarget","clearInterval","removeItem","Modal","open","MainContainer","Fragment","CssBaseline","Container","maxWidth","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","Timer","exact","path","TaskInfo","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29a9f818.chunk.js","sourcesContent":["export const SET_ROW_TASKS = 'SET_ROW_TASKS';\r\nexport const DELETE_ROW_TASKS = 'DELETE_ROW_TASKS';\r\nexport const GENERATE_NEW_TASKS = 'GENERATE_NEW_TASKS';\r\nexport const GET_NEW_TASK = 'GET_NEW_TASK'\r\n\r\nconst randomArrTasks = [\r\n  {\r\n    number: 1,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 2, 0, 40),\r\n    timeEnd: new Date(2019, 10, 10, 2, 10, 40),\r\n    timeSpend: new Date(2019, 10, 10, 2, 10, 40) - new Date(2019, 10, 10, 2, 0, 40),\r\n  },\r\n  {\r\n    number: 2,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 2, 15, 40),\r\n    timeEnd: new Date(2019, 10, 10, 2, 20, 40),\r\n    timeSpend: new Date(2019, 10, 10, 2, 20, 40) - new Date(2019, 10, 10, 2, 15, 40),\r\n  },\r\n  {\r\n    number: 3,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 2, 22, 40),\r\n    timeEnd: new Date(2019, 10, 10, 2, 33, 40),\r\n    timeSpend: new Date(2019, 10, 10, 2, 33, 40) - new Date(2019, 10, 10, 2, 22, 40),\r\n  },\r\n  {\r\n    number: 4,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 2, 35, 40),\r\n    timeEnd: new Date(2019, 10, 10, 3, 45, 40),\r\n    timeSpend: new Date(2019, 10, 10, 3, 45, 40) - new Date(2019, 10, 10, 2, 35, 40),\r\n  },\r\n  {\r\n    number: 5,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 3, 46, 40),\r\n    timeEnd: new Date(2019, 10, 10, 3, 54, 40),\r\n    timeSpend: new Date(2019, 10, 10, 3, 54, 40) - new Date(2019, 10, 10, 3, 46, 40),\r\n  },\r\n  {\r\n    number: 6,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 3, 55, 40),\r\n    timeEnd: new Date(2019, 10, 10, 4, 20, 40),\r\n    timeSpend: new Date(2019, 10, 10, 4, 20, 40) - new Date(2019, 10, 10, 3, 55, 40),\r\n  },\r\n  {\r\n    number: 7,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 6, 20, 40),\r\n    timeEnd: new Date(2019, 10, 10, 8, 5, 40),\r\n    timeSpend: new Date(2019, 10, 10, 8, 5, 40) - new Date(2019, 10, 10, 6, 20, 40),\r\n  },\r\n  {\r\n    number: 8,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 9, 6, 40),\r\n    timeEnd: new Date(2019, 10, 10, 9, 22, 40),\r\n    timeSpend: new Date(2019, 10, 10, 9, 22, 40) - new Date(2019, 10, 10, 9, 6, 40),\r\n  },\r\n  {\r\n    number: 9,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 10, 0, 40),\r\n    timeEnd: new Date(2019, 10, 10, 10, 10, 40),\r\n    timeSpend: new Date(2019, 10, 10, 10, 10, 40) - new Date(2019, 10, 10, 10, 0, 40),\r\n  },\r\n  {\r\n    number: 10,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 11, 5, 40),\r\n    timeEnd: new Date(2019, 10, 10, 11, 10, 40),\r\n    timeSpend: new Date(2019, 10, 10, 11, 10, 40) - new Date(2019, 10, 10, 11, 5, 40),\r\n  },\r\n  {\r\n    number: 11,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 11, 15, 40),\r\n    timeEnd: new Date(2019, 10, 10, 11, 17, 40),\r\n    timeSpend: new Date(2019, 10, 10, 11, 17, 40) - new Date(2019, 10, 10, 11, 15, 40),\r\n  },\r\n  {\r\n    number: 12,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 11, 44, 40),\r\n    timeEnd: new Date(2019, 10, 10, 11, 55, 40),\r\n    timeSpend: new Date(2019, 10, 10, 11, 55, 40) - new Date(2019, 10, 10, 11, 44, 40),\r\n  },\r\n  {\r\n    number: 13,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 12, 0, 0),\r\n    timeEnd: new Date(2019, 10, 10, 12, 33, 0),\r\n    timeSpend: new Date(2019, 10, 10, 12, 33, 0) - new Date(2019, 10, 10, 12, 0, 0),\r\n  },\r\n  {\r\n    number: 14,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, 10, 12, 40, 0),\r\n    timeEnd: new Date(2019, 10, 10, 13, 22, 0),\r\n    timeSpend: new Date(2019, 10, 10, 13, 22, 0) - new Date(2019, 10, 10, 12, 40, 0),\r\n  }\r\n]\r\n\r\nexport const setRowTasks = task => ({\r\n  type: SET_ROW_TASKS,\r\n  payload: task\r\n})\r\n\r\nexport const deleteRowTasks = (index) => ({\r\n  type: DELETE_ROW_TASKS,\r\n  payload: index,\r\n})\r\n\r\nexport const generateNewTasks = (arr) => ({\r\n  type: GENERATE_NEW_TASKS,\r\n  payload: randomArrTasks,\r\n})\r\n\r\nexport const getNewTask = (task) => ({\r\n  type: GET_NEW_TASK,\r\n  payload: task,\r\n})\r\n\r\n\r\n","import { SET_ROW_TASKS } from './actions';\r\nimport { DELETE_ROW_TASKS } from './actions';\r\nimport { GENERATE_NEW_TASKS } from './actions';\r\nimport { GET_NEW_TASK } from './actions';\r\nimport { getNewTask } from './actions'\r\n\r\n\r\n\r\nconst lastTasks = JSON.parse(localStorage.getItem('tasks'))\r\n\r\nexport const defaultState = lastTasks === null ? [] : lastTasks;\r\n\r\n\r\nexport const tableTasksReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case SET_ROW_TASKS:\r\n    //   return [\r\n    //     ...state,\r\n    //     action.payload,\r\n    //   ]\r\n    case DELETE_ROW_TASKS:\r\n      return [\r\n        ...state.filter((el) => el.number !== action.payload)\r\n      ]\r\n    case GENERATE_NEW_TASKS:\r\n\r\n      return [\r\n        ...state = [],\r\n        ...action.payload\r\n      ]\r\n    // case GET_NEW_TASK:\r\n    //   return [\r\n    //     ...state,\r\n    //     action.payload\r\n    //   ]\r\n    case 'GET_NEW_ROW_TASK':\r\n      return [\r\n        ...state,\r\n        action.playload\r\n      ]\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n// export const getNewTaskThunk = (task) => {\r\n//   return dispatch => {\r\n//     console.log('thunk is work')\r\n//     dispatch(getNewTask(task))\r\n//   }\r\n// }","import { combineReducers } from \"redux\";\r\nimport { stopwatchReducer } from \"./stopwatch/reducers\";\r\nimport { tableTasksReducer } from \"./tableTasks/reducers\";\r\n\r\nexport default combineReducers({\r\n  // stopwatch: stopwatchReducer,\r\n  tableTasks: tableTasksReducer,\r\n});","import { takeEvery, takeLatest, put, delay } from 'redux-saga/effects'\r\nimport { number } from 'prop-types'\r\n\r\nfunction* getNewRowTask() {\r\n  yield put({\r\n    type: \"GET_NEW_ROW_TASK\",\r\n    playload: JSON.parse(localStorage.getItem('newTask'))\r\n  })\r\n}\r\n\r\nexport function* watchAddNewTask() {\r\n  yield takeLatest(\"SET_ROW_TASKS\", getNewRowTask)\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles, styled } from '@material-ui/styles'\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst blue900 = blue[900]\r\n\r\nconst ButtonTable = styled(Button)({\r\n  color: blue900,\r\n  backgroundColor: 'white',\r\n  boxShadow: '0 0  5px -1px grey',\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '80%',\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    color: blue900,\r\n    alignText: 'center',\r\n  },\r\n  items: {\r\n    textAlign: 'center',\r\n    listStyleType: 'none',\r\n    color: blue900,\r\n    fontSize: '20px'\r\n  },\r\n  error: {\r\n    textAlign: 'center',\r\n    color: 'red',\r\n  }\r\n})\r\n\r\nconst TaskInfo = (props) => {\r\n  const classes = useStyles();\r\n  const numberTask = props.match.params.id\r\n  const test = props.rows.filter((el) => el.number === parseInt(numberTask))\r\n  const taskInfo = test[0]\r\n\r\n  return (\r\n    <div>\r\n      {taskInfo !== undefined\r\n        ?\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>All info task №{taskInfo.number} name - {taskInfo.nameTask}</h1>\r\n          <ul className={classes.items}>\r\n            <li>timeStart: {moment(taskInfo.timeStart).format(\"HH:mm:ss\")}</li>\r\n            <li>timeEnd: {moment(taskInfo.timeEnd).format(\"HH:mm:ss\")}</li>\r\n            <li>timeSpend: {moment.utc(taskInfo.timeSpend).format(\"HH:mm:ss\")}</li>\r\n          </ul>\r\n          <Link to=\"/Brocoders-4\" style={{ textDecoration: 'none' }}>\r\n            <ButtonTable>\r\n              back\r\n        </ButtonTable>\r\n          </Link>\r\n        </div>\r\n        :\r\n        <div className={classes.error}>\r\n          <div style={{ margin: '15px' }}> ERORR: this task not found</div>\r\n          <Link to=\"Brocoders-4/\" style={{ textDecoration: 'none' }}>\r\n            <ButtonTable >\r\n              back\r\n        </ButtonTable>\r\n          </Link>\r\n        </div>}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nTaskInfo.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  }))\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(TaskInfo)","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.element,\r\n  value: PropTypes.number,\r\n  index: PropTypes.number,\r\n}\r\n","import React from 'react';\r\nimport { withStyles, styled } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { connect } from 'react-redux';\r\nimport { deleteRowTasks } from '../../../../store/tableTasks/actions'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst blue900 = blue[900];\r\nconst blue50 = blue[50];\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    color: theme.palette.common.grey,\r\n  },\r\n  body: {\r\n    backgroundColor: blue50,\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nconst ButtonTable = styled(Button)({\r\n  color: blue900,\r\n  backgroundColor: 'white',\r\n  boxShadow: '0 0  5px -1px grey',\r\n})\r\n\r\nfunction TableTasks(props) {\r\n\r\n  localStorage.setItem('tasks', JSON.stringify(props.rows))\r\n\r\n  const deleteTask = async (e) => {\r\n    const index = e.target.closest('button').getAttribute('tabindex')\r\n\r\n    props.deleteRowTasks(parseInt(index))\r\n  }\r\n  const mapTableTasks = props.rows.map(row => (\r\n    <StyledTableRow key={row.number}>\r\n      <StyledTableCell component=\"th\" scope=\"row\">\r\n        {row.number}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {row.nameTask}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {moment(row.timeStart).format(\"HH:mm:ss\")}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {moment(row.timeEnd).format(\"HH:mm:ss\")}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {moment.utc(row.timeSpend).format(\"HH:mm:ss\")}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\" >\r\n        <Link to={`Brocoders-4/task/${row.number}`} style={{ textDecoration: 'none' }}>\r\n          <ButtonTable\r\n            tabIndex={row.number}\r\n            key={row.number}\r\n          >info</ButtonTable>\r\n        </Link>\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        <ButtonTable tabIndex={row.number} key={row.number} onClick={deleteTask}>\r\n          Delete\r\n          </ButtonTable>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  ))\r\n\r\n  return (\r\n    <Table  >\r\n      <TableHead>\r\n        <TableRow>\r\n          <StyledTableCell >№</StyledTableCell>\r\n          <StyledTableCell align=\"left\">Task</StyledTableCell>\r\n          <StyledTableCell align=\"left\">Time start</StyledTableCell>\r\n          <StyledTableCell align=\"left\">Time end</StyledTableCell>\r\n          <StyledTableCell align=\"left\">Time spend</StyledTableCell>\r\n          <StyledTableCell align=\"left\">Info</StyledTableCell>\r\n          <StyledTableCell align=\"left\">Delete</StyledTableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {mapTableTasks}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deleteRowTasks,\r\n}\r\n\r\nTableTasks.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  }))\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTasks)","import React, { useState } from 'react';\r\nimport {\r\n  ComposedChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip\r\n} from 'recharts';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { styled } from '@material-ui/styles';\r\nimport { generateNewTasks } from '../../../../store/tableTasks/actions'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst blue900 = blue[900]\r\n\r\nconst ButtonGenerate = styled(Button)({\r\n  color: blue900,\r\n  backgroundColor: 'white',\r\n  boxShadow: '0 0  5px -1px grey',\r\n  margin: '20px 50%',\r\n})\r\n\r\nconst Chart = (props) => {\r\n  let arr = []\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    arr.push({\r\n      h: i,\r\n      minutes: 0,\r\n      maxMinutes: 60\r\n    })\r\n  }\r\n\r\n  const createChartMinutesOnHour = (props, arr) => {\r\n    for (let x = 0; x < props.rows.length; x++) {\r\n\r\n      let hourStart = parseInt(moment(props.rows[x].timeStart).format('H'))\r\n      let hourEnd = parseInt(moment(props.rows[x].timeEnd).format('H'))\r\n      let hourStartMinutes = parseInt(moment(props.rows[x].timeStart).format('m'))\r\n      let hourEndMinutes = parseInt(moment(props.rows[x].timeEnd).format('m'))\r\n      let timeSpend = moment.duration(moment(props.rows[x].timeEnd).diff(moment(props.rows[x].timeStart))).asMinutes() - ((60 - hourStartMinutes) + hourEndMinutes)\r\n\r\n      if (hourStart === hourEnd) {\r\n        arr[hourStart].minutes += (hourEndMinutes - hourStartMinutes)\r\n      } else {\r\n        arr[hourStart].minutes += (60 - parseInt(moment(props.rows[x].timeStart).format('m')))\r\n        arr[hourEnd].minutes += parseInt(moment(props.rows[x].timeEnd).format('m'))\r\n      }\r\n      if (hourEnd - hourStart > 1) {\r\n        for (let i = hourStart + 1; i < hourEnd; i++) {\r\n          arr[i].minutes = timeSpend > 60 ? 60 : timeSpend\r\n          timeSpend -= arr[i].minutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createChartMinutesOnHour(props, arr)\r\n\r\n  return (\r\n    <div>\r\n      <ComposedChart width={1000} height={350} data={arr} margin={{ top: 50, right: 0, bottom: 0, left: 0 }}>\r\n        <XAxis dataKey=\"h\" />\r\n        <YAxis dataKey=\"maxMinutes\" />\r\n        <Legend />\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <Tooltip />\r\n        <Bar dataKey=\"minutes\" barSize={20} fill=\"#413ea0\" />\r\n      </ComposedChart >\r\n      <ButtonGenerate onClick={() => props.generateNewTasks()}>generate</ButtonGenerate>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  generateNewTasks\r\n}\r\n\r\nChart.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  }))\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from './TabPanel/TabPanel'\r\nimport cyan from '@material-ui/core/colors/cyan';\r\nimport TableTasks from './TableTasks/TableTasks';\r\nimport Chart from './Chart/Chart';\r\n\r\nconst cyan500 = cyan[500]\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  tabs: {\r\n    background: cyan500\r\n  },\r\n  tab: {\r\n    minWidth: '50%'\r\n  }\r\n});\r\n\r\nexport default function ContainerTabPanel() {\r\n  const [value, setValue] = React.useState(0);\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" component=\"div\">\r\n        <Tabs\r\n          className={classes.tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab className={classes.tab} label=\"task log\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"task chart\" {...a11yProps(0)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <TableTasks />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Chart />\r\n      </TabPanel>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { setRowTasks } from '../../../store/tableTasks/actions'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pink600 = pink[600]\r\nconst blue900 = blue[900]\r\n\r\nconst useStyles = makeStyles({\r\n  taskTimer: {\r\n    borderRadius: \"50%\",\r\n    boxShadow: '0 5px 10px 0px grey',\r\n    width: '200px',\r\n    height: '200px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '30px 0'\r\n  },\r\n  timer: {\r\n    color: blue900,\r\n    fontSize: '30px',\r\n    margin: 'auto',\r\n  },\r\n  buttonStopOrStart: {\r\n    color: blue900,\r\n    boxShadow: '0 0  5px -1px grey',\r\n    marginBottom: '30px'\r\n  },\r\n  taskContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  taskNameInput: {\r\n    textAlignLast: 'center',\r\n    color: blue900,\r\n  },\r\n  modal: {\r\n    width: '70%',\r\n    padding: '15px',\r\n    background: 'white',\r\n    height: '200px',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50% , -50%)'\r\n  },\r\n  modalTitle: {\r\n    color: pink600,\r\n    fontSize: '20px',\r\n    marginBottom: '15px'\r\n  },\r\n  modalText: {\r\n    color: 'grey'\r\n  },\r\n  modalButton: {\r\n    color: blue900,\r\n    position: \"absolute\",\r\n    right: '15px',\r\n    bottom: '15px'\r\n  }\r\n})\r\n\r\nconst Stopwatch = (props) => {\r\n  const classes = useStyles();\r\n  const strogeSaveTimeRinning = JSON.parse(localStorage.getItem('startTime'))\r\n  const strogeTaskName = JSON.parse(localStorage.getItem('taskName'))\r\n\r\n  const [runningTime, setRunningTime] = useState(0);\r\n  const [timer, setTimer] = useState(Date.now());\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [timeStart, setTimeStart] = useState('');\r\n  const [numberTask, setNumberTask] = useState(1);\r\n  const [buttonText, setButtonText] = useState('start');\r\n\r\n  const changeTaskName = (e) => {\r\n    setTaskName(e.target.value)\r\n    localStorage.setItem('taskName', JSON.stringify(e.target.value))\r\n  }\r\n\r\n  const startStopwatche = (startTime) => {\r\n    props.rows.length === 0 ? setNumberTask(1) : setNumberTask(props.rows[props.rows.length - 1].number + 1)\r\n    setButtonText('stop')\r\n    setTimer(setInterval(() => {\r\n      setRunningTime(Date.now() - startTime);\r\n    }))\r\n    localStorage.setItem('startTime', JSON.stringify(startTime))\r\n  }\r\n\r\n  const stopStopwatch = () => {\r\n    clearInterval(timer)\r\n    setButtonText('start')\r\n    setRunningTime(0)\r\n    setTaskName('')\r\n    localStorage.removeItem('startTime')\r\n    localStorage.removeItem('taskName')\r\n  };\r\n\r\n  const hadleButtonStart = (e) => {\r\n    taskName === \"\" ? setModalStatus(true) : setModalStatus(false)\r\n\r\n    if (taskName !== \"\") {\r\n\r\n      if (e.currentTarget.value === \"start\") {\r\n        startStopwatche(Date.now())\r\n        setTimeStart(Date.now())\r\n      } else {\r\n        stopStopwatch()\r\n\r\n        localStorage.setItem('newTask', JSON.stringify({\r\n          number: numberTask,\r\n          nameTask: taskName,\r\n          timeStart: timeStart,\r\n          timeEnd: Date.now(),\r\n          timeSpend: runningTime,\r\n        }))\r\n        // const newTask = {\r\n        //   number: numberTask,\r\n        //   nameTask: taskName,\r\n        //   timeStart: timeStart,\r\n        //   timeEnd: Date.now(),\r\n        //   timeSpend: runningTime,\r\n        // }\r\n\r\n        props.setRowTasks()//newTask)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setModalStatus(false)\r\n  }\r\n\r\n  window.onload = () => {\r\n    if (strogeSaveTimeRinning !== null) {\r\n      startStopwatche(strogeSaveTimeRinning)\r\n      setTimeStart(strogeSaveTimeRinning)\r\n      if (strogeTaskName !== null) setTaskName(strogeTaskName)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.taskContainer}>\r\n      <TextField\r\n        placeholder=\"Name of your task\"\r\n        inputProps={{ className: classes.taskNameInput }}\r\n        margin=\"normal\"\r\n        onChange={changeTaskName}\r\n        value={taskName}\r\n      />\r\n      <Box\r\n        className={classes.taskTimer}\r\n        children={\r\n          <Box\r\n            component=\"span\"\r\n            className={classes.timer}\r\n          >{moment.utc(runningTime).format(\"HH:mm:ss\")}</Box>}\r\n      />\r\n      <Button\r\n        variant=\"text\"\r\n        className={classes.buttonStopOrStart}\r\n        value={buttonText}\r\n        onClick={hadleButtonStart}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n      <Modal open={modalStatus} >\r\n        <div className={classes.modal}>\r\n          <h3 className={classes.modalTitle}> Empty task name</h3>\r\n          <p className={classes.modalText}>You are truing close your task without name? enter the title and try again!</p>\r\n          <Button\r\n            onClick={handleModalClose}\r\n            className={classes.modalButton}\r\n          >close</Button>\r\n        </div>\r\n      </Modal>\r\n    </div >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setRowTasks,\r\n}\r\n\r\nStopwatch.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  }))\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stopwatch)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport ContainerTabPanel from \"./ContainerTabPanel/ContainerTabPanel\";\r\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\r\n\r\nexport default function MainContainer() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth={false} style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        <Stopwatch />\r\n        <Container>\r\n          <ContainerTabPanel />\r\n        </Container>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchAddNewTask } from './store/tableTasks/saga';\nimport TaskInfo from './components/TaskInfo/TaskInfo'\nimport MainContainer from \"./components/MainContainer/MainContainer\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(watchAddNewTask)\n\nfunction Timer() {\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter >\n        <Route exact path=\"/Brocoders-4/\" component={MainContainer} />\n        <Route path=\"/Brocoders-4/task/:id\" component={TaskInfo} />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default Timer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Timer from './Timer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Timer />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}