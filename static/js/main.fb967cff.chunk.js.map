{"version":3,"sources":["store/stopwatch/reducers.js","store/tableTasks/actions.js","store/tableTasks/reducers.js","store/reducers.js","store/tableTasks/saga.js","store/stopwatch/actions.js","store/stopwatch/saga.js","components/TaskInfo/TaskInfo.jsx","components/MainContainer/ContainerTabPanel/TabPanel/TabPanel.jsx","components/MainContainer/ContainerTabPanel/TableTasks/TableBody/Tasks.jsx","components/MainContainer/ContainerTabPanel/TableTasks/TableTasks.jsx","components/MainContainer/ContainerTabPanel/Chart/Chart.jsx","components/MainContainer/ContainerTabPanel/ContainerTabPanel.jsx","components/MainContainer/Stopwatch/ModalWindow/ModalWindow.jsx","components/MainContainer/Stopwatch/Stopwatch.jsx","components/MainContainer/MainContainer.jsx","TimerApp.js","serviceWorker.js","index.js"],"names":["defaultState","status","dayInToday","parseInt","moment","Date","now","format","monthInToday","randomArrTasks","number","nameTask","timeStart","timeEnd","timeSpend","deleteRowTask","index","type","payload","lastTasks","JSON","parse","localStorage","getItem","combineReducers","stopwatch","state","action","tableTasks","filter","el","addNewRowTaskSaga","watchAddNewTask","deleteTaskSaga","watchDeleteTask","put","takeLatest","setModalStatus","setModalStatusSaga","watchModalStatus","console","log","playload","blue900","blue","useStyles","makeStyles","container","marginLeft","marginRight","width","textAlign","title","color","alignText","items","listStyleType","fontSize","error","button","backgroundColor","boxShadow","link","textDecoration","connect","rows","props","classes","numberTask","match","params","id","taskInfo","undefined","className","utc","to","Button","style","margin","TabPanel","children","value","other","Typography","component","role","hidden","aria-labelledby","Box","blue50","StyledTableCell","styled","TableCell","fontWeight","StyledButton","StyledLink","Link","mapDispatchToProps","setItem","stringify","deleteTask","e","target","closest","getAttribute","mapTableTasks","map","row","TableRow","key","scope","align","tabIndex","onClick","TableBody","arrTableHead","TableTasks","mapTableHeadCell","cell","Table","TableHead","buttonGenerate","alignSelf","chartContainer","height","display","flexDirection","transformTime","time","createData","arr","i","push","h","minutes","maxMinutes","x","length","hourStart","hourEnd","hourStartMinutes","hourEndMinutes","allTimeSpend","duration","diff","asMinutes","generateNewTasks","data","top","right","bottom","left","dataKey","stroke","barSize","fill","cyan500","cyan","a11yProps","tabs","background","tab","minWidth","ContainerTabPanel","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","label","pink600","pink","modal","padding","transform","modalTitle","marginBottom","modalText","modalButton","Modal","open","boxTimer","borderRadius","alignItems","timer","buttonStopOrStart","taskContainer","justifyContent","taskNameInput","textAlignLast","getNewTask","task","strogeSaveTimeRinning","strogeTaskName","strogeButtonText","runningTime","setRunningTime","setTimer","taskName","setTaskName","setTimeStart","setNumberTask","startStopwatch","startTime","setInterval","useEffect","clearInterval","TextField","placeholder","inputProps","variant","currentTarget","removeItem","mainContainer","MainContainer","clasess","Fragment","CssBaseline","Container","maxWidth","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","Timer","exact","path","TaskInfo","Boolean","window","location","hostname","ReactDOM","render","TimerApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb967cff.chunk.js","sourcesContent":["const defaultState = {\r\n  status: false\r\n};\r\n\r\nexport const stopwatchReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_MODAL_STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      }\r\n    default:\r\n      break\r\n  }\r\n  return state;\r\n}","import moment from 'moment'\r\n// export const GET_NEW_TASKS = 'GET_NEW_TASKS';\r\nexport const DELETE_ROW_TASK = 'DELETE_ROW_TASK';\r\nexport const GENERATE_NEW_TASKS = 'GENERATE_NEW_TASKS';\r\nexport const GET_NEW_TASK = 'GET_NEW_TASK'\r\n\r\nconst dayInToday = parseInt(moment(Date.now()).format('D'))\r\nconst monthInToday = parseInt(moment(Date.now()).format('Mo')) - 1\r\n\r\nconst randomArrTasks = [\r\n  {\r\n    number: 1,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 2, 0, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 2, 10, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 2, 10, 40) - new Date(2019, monthInToday, dayInToday, 2, 0, 40),\r\n  },\r\n  {\r\n    number: 2,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 2, 15, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 2, 20, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 2, 20, 40) - new Date(2019, monthInToday, dayInToday, 2, 15, 40),\r\n  },\r\n  {\r\n    number: 3,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 2, 22, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 2, 33, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 2, 33, 40) - new Date(2019, monthInToday, dayInToday, 2, 22, 40),\r\n  },\r\n  {\r\n    number: 4,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 2, 35, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 3, 45, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 3, 45, 40) - new Date(2019, monthInToday, dayInToday, 2, 35, 40),\r\n  },\r\n  {\r\n    number: 5,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, dayInToday, 3, 46, 40),\r\n    timeEnd: new Date(2019, 10, dayInToday, 3, 54, 40),\r\n    timeSpend: new Date(2019, 10, dayInToday, 3, 54, 40) - new Date(2019, 10, dayInToday, 3, 46, 40),\r\n  },\r\n  {\r\n    number: 6,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 3, 55, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 4, 20, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 4, 20, 40) - new Date(2019, monthInToday, dayInToday, 3, 55, 40),\r\n  },\r\n  {\r\n    number: 7,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 6, 20, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 8, 5, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 8, 5, 40) - new Date(2019, monthInToday, dayInToday, 6, 20, 40),\r\n  },\r\n  {\r\n    number: 8,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 9, 6, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 9, 22, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 9, 22, 40) - new Date(2019, monthInToday, dayInToday, 9, 6, 40),\r\n  },\r\n  {\r\n    number: 9,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 10, 0, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 10, 10, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 10, 10, 40) - new Date(2019, monthInToday, dayInToday, 10, 0, 40),\r\n  },\r\n  {\r\n    number: 10,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, 10, dayInToday, 11, 5, 40),\r\n    timeEnd: new Date(2019, 10, dayInToday, 11, 10, 40),\r\n    timeSpend: new Date(2019, 10, dayInToday, 11, 10, 40) - new Date(2019, 10, dayInToday, 11, 5, 40),\r\n  },\r\n  {\r\n    number: 11,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 11, 15, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 11, 17, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 11, 17, 40) - new Date(2019, monthInToday, dayInToday, 11, 15, 40),\r\n  },\r\n  {\r\n    number: 12,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 11, 44, 40),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 11, 55, 40),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 11, 55, 40) - new Date(2019, monthInToday, dayInToday, 11, 44, 40),\r\n  },\r\n  {\r\n    number: 13,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 12, 0, 0),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 12, 33, 0),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 12, 33, 0) - new Date(2019, monthInToday, dayInToday, 12, 0, 0),\r\n  },\r\n  {\r\n    number: 14,\r\n    nameTask: 'test task',\r\n    timeStart: new Date(2019, monthInToday, dayInToday, 12, 40, 0),\r\n    timeEnd: new Date(2019, monthInToday, dayInToday, 13, 22, 0),\r\n    timeSpend: new Date(2019, monthInToday, dayInToday, 13, 22, 0) - new Date(2019, monthInToday, dayInToday, 12, 40, 0),\r\n  }\r\n]\r\n\r\nexport const deleteRowTask = (index) => ({\r\n  type: DELETE_ROW_TASK,\r\n  payload: index,\r\n})\r\n\r\nexport const generateNewTasks = () => ({\r\n  type: GENERATE_NEW_TASKS,\r\n  payload: randomArrTasks,\r\n})\r\n\r\nexport const getNewTask = (task) => ({\r\n  type: GET_NEW_TASK,\r\n  payload: task,\r\n})\r\n\r\n\r\n\r\n","import { GENERATE_NEW_TASKS } from './actions';\r\n\r\nconst lastTasks = JSON.parse(localStorage.getItem('tasks'))\r\n\r\nexport const defaultState = lastTasks === null ? [] : lastTasks;\r\n\r\n\r\nexport const tableTasksReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GENERATE_NEW_TASKS:\r\n      return [\r\n        ...state = [],\r\n        ...action.payload\r\n      ]\r\n    case 'ADD_NEW_TASK':\r\n      return [\r\n        ...state,\r\n        action.payload\r\n      ]\r\n    case 'DELETE_ROW_TASK':\r\n      return [\r\n        ...state.filter((el) => el.number !== action.payload)\r\n      ]\r\n    default:\r\n      break\r\n  }\r\n\r\n  return state;\r\n}","import { combineReducers } from \"redux\";\r\nimport { stopwatchReducer } from \"./stopwatch/reducers\";\r\nimport { tableTasksReducer } from \"./tableTasks/reducers\";\r\n\r\nexport default combineReducers({\r\n  stopwatch: stopwatchReducer,\r\n  tableTasks: tableTasksReducer,\r\n});","import { takeLatest, put } from 'redux-saga/effects'\r\nimport { deleteRowTask } from './actions'\r\n\r\nfunction* addNewRowTaskSaga() {\r\n  yield put({\r\n    type: \"ADD_NEW_TASK\",\r\n    payload: JSON.parse(localStorage.getItem('newTask'))\r\n  })\r\n}\r\n\r\nexport function* watchAddNewTask() {\r\n  yield takeLatest(\"GET_NEW_TASK\", addNewRowTaskSaga)\r\n}\r\n\r\nfunction* deleteTaskSaga() {\r\n  yield put({\r\n    type: \"DELETE_ROW_TASK\",\r\n    payload: deleteRowTask().payload\r\n  })\r\n}\r\n\r\nexport function* watchDeleteTask() {\r\n  yield takeLatest(\"DELETE_ROW_TASK\", deleteTaskSaga)\r\n}\r\n\r\n","export const SET_MODAL_STATUS = 'SET_MODAL_STATUS';\r\n\r\nexport const setModalStatus = status => ({\r\n  type: SET_MODAL_STATUS,\r\n  payload: status\r\n})","import { takeLatest, put } from 'redux-saga/effects'\r\nimport { setModalStatus } from './actions'\r\n\r\nfunction* setModalStatusSaga() {\r\n  console.log('sdsds')\r\n  yield put({\r\n    type: \"SET_MODAL_STATUS\",\r\n    playload: setModalStatus().playload\r\n  })\r\n}\r\n\r\nexport function* watchModalStatus() {\r\n  yield takeLatest(\"SET_MODAL_STATUS\", setModalStatusSaga)\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst blue900 = blue[900]\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '80%',\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    color: blue900,\r\n    alignText: 'center',\r\n  },\r\n  items: {\r\n    textAlign: 'center',\r\n    listStyleType: 'none',\r\n    color: blue900,\r\n    fontSize: '20px'\r\n  },\r\n  error: {\r\n    textAlign: 'center',\r\n    color: 'red',\r\n  },\r\n  button: {\r\n    color: blue900,\r\n    backgroundColor: 'white',\r\n    boxShadow: '0 0  5px -1px grey',\r\n  },\r\n  link: {\r\n    textDecoration: 'none'\r\n  }\r\n})\r\n\r\nconst TaskInfo = (props) => {\r\n  const classes = useStyles();\r\n  const numberTask = props.match.params.id\r\n  const thisTask = props.rows.filter((el) => el.number === parseInt(numberTask))\r\n  const taskInfo = thisTask[0]\r\n\r\n  return (\r\n    <div>\r\n      {taskInfo !== undefined\r\n        ?\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>All info task №{taskInfo.number} name - {taskInfo.nameTask}</h1>\r\n          <ul className={classes.items}>\r\n            <li>timeStart: {moment(taskInfo.timeStart).format(\"HH:mm:ss\")}</li>\r\n            <li>timeEnd: {moment(taskInfo.timeEnd).format(\"HH:mm:ss\")}</li>\r\n            <li>timeSpend: {moment.utc(taskInfo.timeSpend).format(\"HH:mm:ss\")}</li>\r\n          </ul>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <Button className={classes.button}>\r\n              back\r\n        </Button>\r\n          </Link>\r\n        </div>\r\n        :\r\n        <div className={classes.error}>\r\n          <div style={{ margin: '15px' }}> ERORR: this task not found</div>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <Button className={classes.button}>\r\n              back\r\n        </Button>\r\n          </Link>\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nTaskInfo.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n  }))\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskInfo)","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.element,\r\n  value: PropTypes.number,\r\n  index: PropTypes.number,\r\n}\r\n","import React from 'react';\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { connect } from 'react-redux';\r\nimport { deleteRowTask } from \"../../../../../store/tableTasks/actions\"\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst blue900 = blue[900];\r\nconst blue50 = blue[50];\r\n\r\nconst StyledTableCell = styled(TableCell)({\r\n  backgroundColor: blue50,\r\n  fontSize: '14px',\r\n  fontWeight: '500'\r\n})\r\n\r\nconst StyledButton = styled(Button)({\r\n  color: blue900,\r\n  backgroundColor: 'white',\r\n  boxShadow: '0 0  5px -1px grey',\r\n})\r\n\r\nconst StyledLink = styled(Link)({\r\n  textDecoration: 'none'\r\n})\r\n\r\nfunction Tasks(props) {\r\n  localStorage.setItem('tasks', JSON.stringify(props.rows))\r\n\r\n  const deleteTask = (e) => {\r\n    const index = e.target.closest('button').getAttribute('tabindex')\r\n    props.deleteRowTask(parseInt(index))\r\n  }\r\n  const mapTableTasks = props.rows.map(row => (\r\n    <TableRow key={row.number}>\r\n      <StyledTableCell component=\"th\" scope=\"row\">\r\n        {row.number}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {row.nameTask}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {moment(row.timeStart).format(\"HH:mm:ss\")}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {moment(row.timeEnd).format(\"HH:mm:ss\")}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        {moment.utc(row.timeSpend).format(\"HH:mm:ss\")}\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\" >\r\n        <StyledLink to={`/task/${row.number}`}>\r\n          <StyledButton\r\n            tabIndex={row.number}\r\n            key={row.number}\r\n          >info\r\n          </StyledButton>\r\n        </StyledLink>\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"left\">\r\n        <StyledButton tabIndex={row.number} key={row.number} onClick={deleteTask}>\r\n          Delete\r\n          </StyledButton>\r\n      </StyledTableCell>\r\n    </TableRow>\r\n  ))\r\n\r\n  return (\r\n    <TableBody>\r\n      {mapTableTasks}\r\n    </TableBody>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deleteRowTask\r\n}\r\n\r\nTasks.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n  })),\r\n  deleteRowTask: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks)","import React from 'react';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tasks from \"./TableBody/Tasks\";\r\n\r\nconst arrTableHead = ['№', 'Task', 'Time start', 'Time end', 'Time spend', 'Info', 'Delete']\r\n\r\nexport const TableTasks = () => {\r\n  const mapTableHeadCell = arrTableHead.map(cell =>\r\n    <TableCell align=\"left\" key={cell}>{cell}</TableCell>\r\n  )\r\n\r\n  return (\r\n    <Table  >\r\n      <TableHead>\r\n        <TableRow>\r\n          {mapTableHeadCell}\r\n        </TableRow>\r\n      </TableHead>\r\n      <Tasks />\r\n    </Table>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  ResponsiveContainer, ComposedChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip\r\n} from 'recharts';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { generateNewTasks } from '../../../../store/tableTasks/actions'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst blue900 = blue[900]\r\n\r\nconst useStyles = makeStyles({\r\n  buttonGenerate: {\r\n    color: blue900,\r\n    backgroundColor: 'white',\r\n    boxShadow: '0 0  5px -1px grey',\r\n    margin: '20px 0  20px 0',\r\n    alignSelf: 'flex-end'\r\n  },\r\n  chartContainer: {\r\n    width: '100%',\r\n    height: '400px',\r\n    display: 'flex',\r\n    flexDirection: \"column\"\r\n  }\r\n\r\n})\r\n\r\nconst transformTime = (time, format) => {\r\n  return parseInt(moment(time).format(format))\r\n}\r\n\r\nexport const createData = (props) => {\r\n  const dayInToday = parseInt(moment(Date.now()).format('D'))\r\n  let arr = []\r\n  for (let i = 0; i < 24; i++) {\r\n    arr.push({\r\n      h: i,\r\n      minutes: 0,\r\n      maxMinutes: 60\r\n    })\r\n  }\r\n\r\n  for (let x = 0; x < props.rows.length; x++) {\r\n\r\n    if (dayInToday === transformTime(props.rows[x].timeStart, 'D')) { // условие для того что бы в график не проходили таски с прошлых дней\r\n\r\n      let hourStart = transformTime(props.rows[x].timeStart, 'H'),\r\n        hourEnd = transformTime(props.rows[x].timeEnd, 'H'),\r\n        hourStartMinutes = transformTime(props.rows[x].timeStart, 'm'),\r\n        hourEndMinutes = transformTime(props.rows[x].timeEnd, 'm'),\r\n        allTimeSpend = moment\r\n          .duration(moment(props.rows[x].timeEnd)\r\n            .diff(moment(props.rows[x].timeStart)))\r\n          .asMinutes() - ((60 - hourStartMinutes) + hourEndMinutes)\r\n\r\n      if (hourStart === hourEnd) {\r\n        arr[hourStart].minutes += (hourEndMinutes - hourStartMinutes)\r\n      } else {\r\n        arr[hourStart].minutes += (60 - transformTime(props.rows[x].timeStart, 'm'))\r\n        arr[hourEnd].minutes += parseInt(transformTime(props.rows[x].timeEnd, 'm'))\r\n      }\r\n      // условие которое срабатывает если задание покрывает 3 и более часов \r\n      if (hourEnd - hourStart > 1) {\r\n        for (let i = hourStart + 1; i < hourEnd; i++) {\r\n          arr[i].minutes = allTimeSpend > 60 ? 60 : allTimeSpend\r\n          allTimeSpend -= arr[i].minutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nconst Chart = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.chartContainer}>\r\n      <ResponsiveContainer width={'100%'} height={400}>\r\n        <ComposedChart data={createData(props)} margin={{ top: 20, right: 0, bottom: 0, left: 0 }}>\r\n          <XAxis dataKey=\"h\" />\r\n          <YAxis dataKey=\"maxMinutes\" />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Tooltip />\r\n          <Bar dataKey=\"minutes\" barSize={20} fill=\"#413ea0\" />\r\n        </ComposedChart >\r\n      </ResponsiveContainer>\r\n      <Button\r\n        className={classes.buttonGenerate}\r\n        onClick={() => props.generateNewTasks()}\r\n      >\r\n        generate\r\n        </Button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  generateNewTasks\r\n}\r\n\r\nChart.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n  })),\r\n  generateNewTasks: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from './TabPanel/TabPanel'\r\nimport cyan from '@material-ui/core/colors/cyan';\r\nimport { TableTasks } from './TableTasks/TableTasks';\r\nimport Chart from './Chart/Chart';\r\n\r\nconst cyan500 = cyan[500]\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  tabs: {\r\n    background: cyan500\r\n  },\r\n  tab: {\r\n    minWidth: '50%'\r\n  }\r\n});\r\n\r\nexport default function ContainerTabPanel() {\r\n  const [value, setValue] = React.useState(0);\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" component=\"div\">\r\n        <Tabs\r\n          className={classes.tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab className={classes.tab} label=\"task log\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"task chart\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <TableTasks />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Chart />\r\n      </TabPanel>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { setModalStatus } from './../../../../store/stopwatch/actions'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pink600 = pink[600]\r\nconst blue900 = blue[900]\r\nconst useStyles = makeStyles({\r\n  modal: {\r\n    width: '70%',\r\n    padding: '15px',\r\n    background: 'white',\r\n    height: '200px',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50% , -50%)'\r\n  },\r\n  modalTitle: {\r\n    color: pink600,\r\n    fontSize: '20px',\r\n    marginBottom: '15px'\r\n  },\r\n  modalText: {\r\n    color: 'grey'\r\n  },\r\n  modalButton: {\r\n    color: blue900,\r\n    position: \"absolute\",\r\n    right: '15px',\r\n    bottom: '15px'\r\n  }\r\n})\r\n\r\nconst ModalWindow = (props) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Modal open={props.status} >\r\n      <div className={classes.modal}>\r\n        <h3 className={classes.modalTitle}> Empty task name</h3>\r\n        <p className={classes.modalText}>You are truing close your task without name? enter the title and try again!</p>\r\n        <Button\r\n          onClick={() => props.setModalStatus(false)}\r\n          className={classes.modalButton}\r\n        >close</Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.stopwatch.status\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus\r\n}\r\n\r\nModalWindow.propTypes = {\r\n  status: PropTypes.bool,\r\n  setModalStatus: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindow)","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { getNewTask } from '../../../store/tableTasks/actions'\r\nimport { setModalStatus } from '../../../store/stopwatch/actions'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport ModalWindow from './ModalWindow/ModalWindow'\r\n\r\nconst blue900 = blue[900]\r\nconst useStyles = makeStyles({\r\n  boxTimer: {\r\n    borderRadius: \"50%\",\r\n    boxShadow: '0 5px 10px 0px grey',\r\n    width: '200px',\r\n    height: '200px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '30px 0'\r\n  },\r\n  timer: {\r\n    color: blue900,\r\n    fontSize: '30px',\r\n    margin: 'auto',\r\n  },\r\n  buttonStopOrStart: {\r\n    color: blue900,\r\n    boxShadow: '0 0  5px -1px grey',\r\n    marginBottom: '30px'\r\n  },\r\n  taskContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  taskNameInput: {\r\n    textAlignLast: 'center',\r\n    color: blue900,\r\n  },\r\n})\r\n\r\nlocalStorage.setItem('buttonText', 'start')\r\n\r\nconst Stopwatch = (props) => {\r\n  const classes = useStyles();\r\n  const strogeSaveTimeRinning = JSON.parse(localStorage.getItem('startTime'))\r\n  const strogeTaskName = JSON.parse(localStorage.getItem('taskName'))\r\n  const strogeButtonText = localStorage.getItem('buttonText', 'start')\r\n\r\n  const [runningTime, setRunningTime] = useState(0);\r\n  const [timer, setTimer] = useState(Date.now());\r\n  const [taskName, setTaskName] = useState('');\r\n  const [timeStart, setTimeStart] = useState('');\r\n  const [numberTask, setNumberTask] = useState(1);\r\n\r\n  const changeTaskName = (e) => {\r\n    setTaskName(e.target.value)\r\n    localStorage.setItem('taskName', JSON.stringify(e.target.value))\r\n  }\r\n\r\n  const startStopwatch = (startTime) => {\r\n    if (props.rows.length !== 0) setNumberTask(props.rows[props.rows.length - 1].number + 1)\r\n    setTimer(setInterval(() => {\r\n      setRunningTime(Date.now() - startTime);\r\n    }))\r\n    setTimeStart(Date.now())\r\n    localStorage.setItem('buttonText', 'stop')\r\n    localStorage.setItem('startTime', JSON.stringify(startTime))\r\n  }\r\n\r\n  const stopStopwatch = () => {\r\n    if (taskName === \"\") {\r\n      props.setModalStatus(true)\r\n    } else {\r\n      clearInterval(timer)\r\n      setRunningTime(0)\r\n      setTaskName('')\r\n      localStorage.setItem('buttonText', 'start')\r\n      localStorage.removeItem('startTime')\r\n      localStorage.removeItem('taskName')\r\n\r\n      localStorage.setItem('newTask', JSON.stringify({\r\n        number: numberTask,\r\n        nameTask: taskName,\r\n        timeStart: timeStart,\r\n        timeEnd: Date.now(),\r\n        timeSpend: runningTime,\r\n      }))\r\n\r\n      props.getNewTask()\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (strogeSaveTimeRinning !== null) {\r\n      startStopwatch(strogeSaveTimeRinning)\r\n      setTimeStart(strogeSaveTimeRinning)\r\n      if (strogeTaskName !== null) setTaskName(strogeTaskName)\r\n    }\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.taskContainer}>\r\n      <TextField\r\n        placeholder=\"Name of your task\"\r\n        inputProps={{ className: classes.taskNameInput }}\r\n        margin=\"normal\"\r\n        onChange={changeTaskName}\r\n        value={taskName}\r\n      />\r\n      <Box\r\n        className={classes.boxTimer}\r\n        children={\r\n          <Box\r\n            component=\"span\"\r\n            className={classes.timer}\r\n          >{moment.utc(runningTime).format(\"HH:mm:ss\")}</Box>\r\n        }\r\n      />\r\n      <Button\r\n        variant=\"text\"\r\n        className={classes.buttonStopOrStart}\r\n        value={strogeButtonText}\r\n        onClick={\r\n          (e) => {\r\n            e.currentTarget.value === \"start\"\r\n              ? startStopwatch(Date.now())\r\n              : stopStopwatch()\r\n          }\r\n        }\r\n      >\r\n        {strogeButtonText}\r\n      </Button>\r\n      <ModalWindow />\r\n    </div >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.tableTasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getNewTask,\r\n  setModalStatus\r\n}\r\n\r\nStopwatch.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number,\r\n    nameTask: PropTypes.string,\r\n    timeStart: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeEnd: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n    timeSpend: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n    ]),\r\n  })),\r\n  getNewTask: PropTypes.func,\r\n  setModalStatus: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stopwatch)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport ContainerTabPanel from \"./ContainerTabPanel/ContainerTabPanel\";\r\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  }\r\n})\r\n\r\nexport default function MainContainer() {\r\n  const clasess = useStyles()\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth={false} className={clasess.mainContainer}>\r\n        <Stopwatch />\r\n        <Container>\r\n          <ContainerTabPanel />\r\n        </Container>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchAddNewTask, watchDeleteTask } from './store/tableTasks/saga';\nimport { watchModalStatus } from './store/stopwatch/saga';\nimport TaskInfo from './components/TaskInfo/TaskInfo'\nimport MainContainer from \"./components/MainContainer/MainContainer\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(\n  watchAddNewTask,\n  watchDeleteTask,\n  watchModalStatus\n)\n\nfunction Timer() {\n\n  return (\n    <Provider store={store}>\n      <HashRouter >\n        <Route exact path=\"/\" component={MainContainer} />\n        <Route path=\"/task/:id\" component={TaskInfo} />\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default Timer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TimerApp from './TimerApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TimerApp />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}